{"version":3,"sources":["logo.svg","Components/TextField/Textfield.jsx","Components/Button/Button.js","utils/ApiHelper.js","Pages/LoginPage/LoginPage.jsx","Pages/Register/RegisterPage.jsx","Components/StripeButton/StripeButton.jsx","Pages/StripePaymentsPage/StripePaymentsPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["TextBox","props","classes","makeStyles","theme","root","borderRadius","textField","width","height","useStyles","style","padding","className","TextField","required","label","defaultValue","variant","clsx","type","onChange","placeholder","value","size","ContainedButtons","background","color","textTransform","fontFamily","fontSize","fontWeight","Button","onClick","text","require","polyfill","LoginPage","state","username","password","isRememberMeChecked","responseGoogle","response","console","log","marginLeft","class","src","paddingBottom","event","setState","target","this","display","FormControlLabel","control","Checkbox","checked","name","cursor","paddingLeft","paddingTop","marginTop","clientId","buttonText","onSuccess","onFailure","cookiePolicy","content","Component","StripeButton","priceForStripe","price","billingAddress","shippingAddress","description","amount","panelLabel","token","stripeKey","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01a83b9b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport clsx from 'clsx'\r\n\r\nconst TextBox = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      borderRadius: \"10px\"\r\n    },\r\n    textField: {\r\n      width: props.width ? props.width : null,\r\n      height: props.height ? props.height : null,\r\n      [`& fieldset`]: {\r\n        borderRadius: '10px',\r\n        height: props.height ? props.height : null,\r\n\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div style={{padding:\"0px\"}}>\r\n    <div className={classes.root}>\r\n      <TextField\r\n        required={props.required}\r\n        label={props.label}\r\n        defaultValue={props.defaultValue}\r\n        variant=\"outlined\"\r\n        className={clsx(classes.textField)}\r\n        type={props.type}\r\n        onChange={props.onChange}\r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        size={props.size}\r\n      />\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\nexport default TextBox;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst ContainedButtons = ({...props}) => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      \"& > *\": {\r\n        borderRadius: `${props.height * 0.178 + 'px'}`,\r\n        background: `linear-gradient(180deg, ${props.color[0]} 0%, ${props.color[1]} 100%)`,\r\n        height: props.height,\r\n        width: props.width,\r\n        textTransform: \"none\",\r\n        fontFamily: \"Libre Franklin\",\r\n        fontSize: \"20px\",\r\n        fontWeight: \"bold\",\r\n      }\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={props.onClick}>\r\n        <div\r\n          // style={{\r\n          //   cursor: \"pointer\",\r\n          //   letterSpacing: \"2.84px\",\r\n          //   lineHeight: \"35px\",\r\n          //   fontSize: \"30px\",\r\n          //   whiteSpace: \"nowrap\"\r\n          // }}\r\n        >\r\n          {props.text}\r\n        </div>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContainedButtons\r\n","import axios from 'axios'\r\n\r\nrequire('es6-promise').polyfill();\r\n\r\nexport class APIHelper {\r\n\r\n    static getMethod(endpoint, headers, cancelToken) {\r\n        return axios.get(endpoint, {\r\n            headers: headers,\r\n            cancelToken: cancelToken\r\n        }).then(function (response) {\r\n            return response['data'];\r\n        }).catch(function (error) {\r\n            if (axios.isCancel(error)) {\r\n                return \"\";\r\n            } else {\r\n                return error.response['data'];\r\n            }\r\n        });\r\n    }\r\n\r\n    static postMethod(endpoint, payload, headers, cancelToken) {\r\n        return axios.post(endpoint, payload, {\r\n            headers: headers,\r\n            type: \"POST\",\r\n            cancelToken: cancelToken\r\n        }).then(response => {\r\n            return response['data'];\r\n        }).catch(function (error) {\r\n            if (axios.isCancel(error)) {\r\n                return \"\";\r\n            } else {\r\n                return error.response['data'];\r\n            }\r\n        })\r\n    }\r\n\r\n    static putMethod(endpoint, payload, headers) {\r\n        return axios.put(endpoint, payload, {\r\n            headers: headers,\r\n            type: \"PUT\"\r\n        }).then(response => {\r\n            return response['data'];\r\n        }).catch(function (error) {\r\n            return error.response['data'];\r\n        })\r\n    }\r\n\r\n    static deleteMethod(endpoint, headers) {\r\n        return axios.delete(endpoint, {\r\n            headers: headers\r\n        }).then(function (response) {\r\n            return response['data'];\r\n        }).catch(function (error) {\r\n            return error.response['data'];\r\n        });\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport TextBox from '../../Components/TextField/Textfield'\r\n// import Button from '@material-ui/core/Button';\r\nimport Button from '../../Components/Button/Button'\r\nimport { APIHelper } from '../../utils/ApiHelper'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport qs from 'qs'\r\nimport './LoginPage.scss'\r\n\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: null,\r\n            password: null,\r\n            isRememberMeChecked: false\r\n        };\r\n    }\r\n    render() {\r\n        const handleOnLogin = () => {\r\n            console.log(\"handleLogin\")\r\n            console.log(this.state.username, this.state.password)\r\n\r\n            let payload = qs.stringify({\r\n                email: this.state.username,\r\n                password: this.state.password\r\n            })\r\n\r\n            const params = new URLSearchParams()\r\n            params.append('email', this.state.username)\r\n            params.append('password', this.state.password)\r\n            let headers = {\r\n                'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n            }\r\n\r\n            APIHelper.postMethod(\"http://localhost:3000/api/auth/login\", params, headers).then(response => {\r\n                if (response['status'] === 1) {\r\n                    console.log(\"Logged In\")\r\n                    console.log(response.data.token)\r\n                    localStorage.setItem('itemName', response.data.token)\r\n                    // localStorage.getItem('itemName')\r\n                }\r\n            })\r\n\r\n            // axios({\r\n            //     method: 'post',\r\n            //     url: \"http://localhost:3000/api/auth/login\",\r\n            //     data: params,\r\n            //     headers: headers\r\n            // }).then(response => {\r\n            //     if (response['ok']) {\r\n            //         console.log(\"Logged In\")\r\n            //     }\r\n            // })\r\n\r\n        }\r\n\r\n        const responseGoogle = response => {\r\n            console.log(response)\r\n        }\r\n        return (\r\n            <div className=\"loginPageWrapper\">\r\n                <div className=\"empoLinkImgStyles\">\r\n                    <h1 style = {{marginLeft: '97px'}} className=\"empolink\">EmpoLink</h1>\r\n                    <div style = {{width: '86%'}}>\r\n                        <img\r\n                            class=\"imgStyles\"\r\n                            src=\"https://cdn.animaapp.com/projects/609e47554a5b8cd6aa2fa687/releases/609e47894a5b8cd6aa2fa68a/img/clip-1062-1@1x.png\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"loginPage\">\r\n                    <div className=\"loginCard\">\r\n                        <h1 className=\"empolink\">Log in</h1>\r\n                        <div style={{ paddingBottom: \"18px\" }}>\r\n                            <TextBox\r\n                                label={\"Username\"}\r\n                                onChange={(event) => this.setState({ username: event.target.value })}\r\n                                value={this.state.username}\r\n                                width={\"458px\"}\r\n                            />\r\n                        </div>\r\n                        <div style={{ paddingBottom: \"9px\" }}>\r\n                            <TextBox\r\n                                label={\"Password\"}\r\n                                type={\"password\"}\r\n                                onChange={(event) => this.setState({ password: event.target.value })}\r\n                                width={\"458px\"}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <div style={{ display: \"inline-block\" }}>\r\n                                <FormControlLabel\r\n                                    control={<Checkbox checked={this.state.isRememberMeChecked} onChange={() => { this.setState({ isRememberMeChecked: !this.state.isRememberMeChecked }) }} name=\"checkedA\" />}\r\n                                    label=\"Remember Me\"\r\n                                />\r\n                            </div>\r\n                            <div className='sign-up' style={{ cursor: \"pointer\", display: \"inline-block\", color: \"#5bb2fc\", paddingLeft: \"240px\" }}>Forgot ?</div>\r\n                        </div>\r\n                        {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleOnLogin}>\r\n                    Login\r\n                </Button> */}\r\n                        <div style={{ paddingBottom: '80px', paddingTop: '21px' }} >\r\n                            <Button\r\n                                text='Log In'\r\n                                width={\"458px\"}\r\n                                height='58px'\r\n                                onClick={() => console.log(\"Button Clicked\")}\r\n                                color={[\"#2699fb\", \"#134d7e\"]}\r\n                            // color = {[\"#a4c772\", \"#4e8400\"]}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <hr className=\"left-line\" />\r\n                        <div style={{ marginLeft: \"10px\", display: \"inline-block\" }}>{\"Or\"}</div>\r\n                        <hr className=\"right-line\" />\r\n                        <div style={{ marginTop: \"80px\" }}>\r\n                            <GoogleLogin\r\n                                clientId=\"1080303502452-90u0ouis2kuoljcr8o7mda2s2632i6l7.apps.googleusercontent.com\"\r\n                                buttonText=\"Sign in with Google\"\r\n                                onSuccess={responseGoogle}\r\n                                onFailure={responseGoogle}\r\n                                cookiePolicy={'single_host_origin'}\r\n                                className='googleLogInStyles'\r\n                            />\r\n                            <div style={{ marginTop: \"18px\" }}>\r\n                                <GoogleLogin\r\n                                    clientId=\"1080303502452-90u0ouis2kuoljcr8o7mda2s2632i6l7.apps.googleusercontent.com\"\r\n                                    buttonText=\"Sign in with Google\"\r\n                                    onSuccess={responseGoogle}\r\n                                    onFailure={responseGoogle}\r\n                                    cookiePolicy={'single_host_origin'}\r\n                                    className='googleLogInStyles'\r\n                                />\r\n                            </div>\r\n                            <div className=\"sign-up\" style={{ paddingLeft: '64px', content: \"center\", marginTop: \"89px\" }}>\r\n                                <div style={{ display: \"inline-block\" }}>Don't have an account yet?</div>\r\n                                <div style={{ cursor: \"pointer\", display: \"inline-block\", color: \"#5bb2fc\" }}>Sign Up</div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default LoginPage;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport '../Register/RegisterPage.scss'\r\nimport TextBox from '../../Components/TextField/Textfield'\r\nimport Button from '../../Components/Button/Button'\r\n\r\nclass RegisterPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div style={{ background: '#23286b', width: '100%', height: '100%', position: 'absolute' }}>\r\n                    <h1 className=\"empolink\">EmpoLink</h1>\r\n                    <div style={{ float: 'right', background: 'white', width: '100%', height: '100%', width: '80%' }} >\r\n                        <div style={{ marginLeft: '33.3%', marginRight: '33.3%', width: '100%', height: '100%', width: '33.33%' }}>\r\n                            <TextBox\r\n                                label={\"First Name\"}\r\n                                onChange={(event) => this.setState({ username: event.target.value })}\r\n                                value={this.state.username}\r\n                                width={\"100%\"}\r\n                                size=\"small\"\r\n\r\n                            />\r\n                            <TextBox\r\n                                label={\"Last Name\"}\r\n                                onChange={(event) => this.setState({ username: event.target.value })}\r\n                                value={this.state.username}\r\n                                width={\"100%\"}\r\n                                size=\"small\"\r\n\r\n                            />\r\n                            <TextBox\r\n                                label={\"Company/BusinessName\"}\r\n                                onChange={(event) => this.setState({ username: event.target.value })}\r\n                                value={this.state.username}\r\n                                width={\"100%\"}\r\n                                size=\"small\"\r\n\r\n                            />\r\n                            <TextBox\r\n                                label={\"Mobile number\"}\r\n                                onChange={(event) => this.setState({ username: event.target.value })}\r\n                                value={this.state.username}\r\n                                width={\"100%\"}\r\n                                size=\"small\"\r\n\r\n                            />\r\n                            <TextBox\r\n                                label={\"Language(s)\"}\r\n                                onChange={(event) => this.setState({ username: event.target.value })}\r\n                                value={this.state.username}\r\n                                width={\"100%\"}\r\n                                size=\"small\"\r\n                            />\r\n                        <Button\r\n                            text='Next'\r\n                            width={\"95%\"}\r\n                            height={40}\r\n                            onClick={() => console.log(\"Button Clicked\")}\r\n                            color={[\"#2699fb\", \"#134d7e\"]}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterPage;","import React from 'react'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\n\r\nconst StripeButton = ({ price }) => {\r\n    const priceForStripe = price * 100;\r\n    const publishableKey = 'pk_test_51Iqe9fSGgEHwLmE0HoiFsbE2pHoKtx9Brb9bIrNrNO7qAFzmkwEMQA9J8u95tTYCwfUgfEMbySgJ9Lxs709iNpsc00DNsFJFk5'\r\n\r\n    const onToken = (token) => {\r\n        console.log(token)\r\n    }\r\n    return(\r\n        <StripeCheckout\r\n            label= 'Pay Bill'\r\n            name= 'CRWN Clothing Ltd.'\r\n            billingAddress\r\n            shippingAddress\r\n            description = {'your total is $$$ 42'}\r\n            amount= {priceForStripe}\r\n            panelLabel = 'Pay Now'\r\n            token = {onToken}\r\n            stripeKey={publishableKey}\r\n        />\r\n    )\r\n}\r\nexport default StripeButton;\r\n\r\n","import React, { Component } from 'react';\r\nimport StripeButton from '../../Components/StripeButton/StripeButton'\r\n\r\nclass StripePaymentsPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 style={{ textAlign: 'center' }}> Register Page</h1>\r\n                <div>\r\n                    <StripeButton price={25} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StripePaymentsPage;","import logo from './logo.svg';\nimport './App.scss';\nimport LoginPage from './Pages/LoginPage/LoginPage'\nimport RegisterPage from './Pages/Register/RegisterPage'\nimport StripePaymentsPage from './Pages/StripePaymentsPage/StripePaymentsPage'\n\nfunction App() {\n  return (\n    <div style={{width:\"100%\", height:\"100%\"}}>\n        {/* <h1>Welcome to EmpoLink</h1> */}\n        <LoginPage/>\n        {/* <RegisterPage/> */}\n        {/* <StripePaymentsPage/> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}